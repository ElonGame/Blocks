#version 300 es

precision mediump float;

in vec2 Texcoord;
out vec3 color;

uniform sampler2D tex;

// Width of Image.
//uniform float fWidth;
// Height of Image.
//uniform float fHeight;
// Indicating cartoon effect is enabled or not.
//uniform float fCartoonEffect;

void main()
{
    float fWidth = 1920.0f;
    float fHeight = 1080.0f;

    // X directional search matrix.
    mat3 GX = mat3( -1.0, 0.0, 1.0,
                    -2.0, 0.0, 2.0,
                    -1.0, 0.0, 1.0 );
    // Y directional search matrix.
    mat3 GY =  mat3( 1.0,  2.0,  1.0,
                     0.0,  0.0,  0.0,
                    -1.0, -2.0, -1.0 );

    vec3  fSumX = vec3( 0.0 );
    vec3  fSumY = vec3( 0.0 );
    vec3 fTotalSum = vec3( 0.0 );

    /* image boundaries Top, Bottom, Left, Right pixels*/
    if( ( Texcoord.x < 0.999 && Texcoord.x > 0.001 &&
            Texcoord.y < 0.999 && Texcoord.y > 0.001 ))
    {
        // X Directional Gradient calculation.
        for(float I=-1.0; I<=1.0; I = I + 1.0)
        {
            for(float J=-1.0; J<=1.0; J = J + 1.0)
            {
                vec2 fTemp = vec2(Texcoord) + vec2(I/fWidth,J/fHeight);
                vec3 fTempSum = texture2D( tex, fTemp).rgb;
                fSumX = fSumX + ( fTempSum * GX[int(I+1.0)][int(J+1.0)]);
                fSumY = fSumY + ( fTempSum * GY[int(I+1.0)][int(J+1.0)]);
            }
        }
        fTotalSum = sqrt(fSumX * fSumX + fSumY * fSumY) * 2;
    }

    color = mix( fTotalSum.brg, texture2D( tex,
                         vec2( Texcoord.s, Texcoord.t)).rgb, 0.7);
}
